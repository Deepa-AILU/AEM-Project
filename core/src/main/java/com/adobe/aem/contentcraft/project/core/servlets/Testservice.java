
package com.kite.core.core.services.impl;import com.day.cq.wcm.api.Page;import com.day.cq.wcm.api.PageManager;import com.kite.core.core.services.ResourceTypeUpdate;import com.kite.core.core.utils.ResolverUtil;import com.day.cq.search.Query;import com.day.cq.search.QueryBuilder;import org.apache.sling.api.resource.PersistenceException;import org.apache.sling.api.resource.Resource;import org.apache.sling.api.resource.ResourceResolver;import org.apache.sling.api.resource.ResourceResolverFactory;import org.osgi.service.component.annotations.Activate;import org.osgi.service.component.annotations.Component;import org.osgi.service.component.annotations.Reference;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import javax.jcr.Node;import javax.jcr.NodeIterator;import javax.jcr.RepositoryException;import java.util.Iterator;@Component(service= ResourceTypeUpdate.class, immediate= true)public class ResourceTypeUpdateImpl implements ResourceTypeUpdate {    private static final Logger log= LoggerFactory.getLogger(ResourceTypeUpdateImpl.class);    @Reference    ResourceResolverFactory resourceResolverFactory;    @Activate    public void activate(){        try{            ResourceResolver resourceResolver= ResolverUtil.newResolver(resourceResolverFactory);            QueryBuilder queryBuilder = resourceResolver.adaptTo(QueryBuilder.class);            Page childPages=resourceResolver.adaptTo(PageManager.class).getPage("/content/kite/us/en");            log.info("/n child pages{}", childPages);            Iterator<Page>page= childPages.listChildren();            while(page.hasNext()){                Page childPage=page.next();                log.info("/n child pages{}", childPage.getName());                changeResourceType(resourceResolver,childPage);        }        }catch(Exception e){            log.info("\n Login exception {}",e.getMessage());        }    }    public void changeResourceType(ResourceResolver resourceResolver,Page child) throws RepositoryException, PersistenceException {            Node pageNode= child.adaptTo(Node.class);            if(pageNode!=null){                log.info(pageNode.getName());                iterateNode(resourceResolver,pageNode);            }else {                log.error("No JCR Node found for the given page path.");            }    }    public void iterateNode(ResourceResolver resourceResolver, Node node) throws RepositoryException, PersistenceException {        log.info("Node: {} (Path: {})", node.getName(), node.getPath());        if(node.hasProperty("test")){            node.setProperty("test","testinggg");            resourceResolver.commit();        }        NodeIterator nodes= node.getNodes();        while(nodes.hasNext()){            Node childNode=nodes.nextNode();            iterateNode(resourceResolver,childNode);        }    }}Image Optimizer for DHL AEM website Creating a feature in AEM that automatically resizes and optimizes images based on the screen sizes and device resolutions to enhance page performance and SEO standards.  Deepa AS Email : Deepa.ailusreenivasan@cognizant.com Phone: 8801541532 
